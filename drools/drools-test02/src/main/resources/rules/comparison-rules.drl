package rules;

// 引入实体
import com.example.droolstest02.entity.TestEntity;

// 编写规则
rule "rule_test_contains"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names contains "张三") and
        // 集合 包含
        TestEntity(list contains names) and
        // 数组包含
        TestEntity(arr contains names)
    then
        System.out.println("rule_test_contains-->对象值:"+$test);
end

rule "rule_test_not_contains"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names not contains "张三") and
        // 集合 包含
        TestEntity(list not contains names) and
        // 数组包含
        TestEntity(arr not contains names)
    then
        System.out.println("rule_test_not_contains-->对象值:"+$test);
end

rule "rule_test_memberOf"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names memberOf list) and
        // 集合 包含
        TestEntity(names memberOf arr)
    then
        System.out.println("rule_test_memberOf-->对象值:"+$test);
end

rule "rule_test_not_memberOf"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names not memberOf list) and
        // 集合 包含
        TestEntity(names not memberOf arr)
    then
        System.out.println("rule_test_not_memberOf-->对象值:"+$test);
end

rule "rule_test_matches"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names matches "张.*")
    then
        System.out.println("rule_test_matches-->对象值:"+$test);
end

rule "rule_test_not_matches"
    no-loop true
    lock-on-active true
    salience 1
    when
        // 字符串
        $test : TestEntity(names not matches "张.*")
    then
        System.out.println("rule_test_not_matches-->对象值:"+$test);
end
